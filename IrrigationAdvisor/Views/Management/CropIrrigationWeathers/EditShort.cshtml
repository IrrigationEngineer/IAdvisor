@model IrrigationAdvisor.ViewModels.Management.CropIrrigationWeatherShortViewModel

@{
    ViewBag.Title = "EditShort";
}

<script js>
    $(document).ready(function () {
        //custom validation rule - checkAge
        $.validator.addMethod("checkMainWeatherStation",
           function (value, element) {
               var result = true;
               if ($('#AlternativeWeatherStation').val() == $('#MainWeatherStation').val())
                   result = false;
               return result;

           });
        //validation implementation will go here.
        $('#myform').validate({
            rules: {
                MainWeatherStationd: {
                    required: true,
                    checkMainWeatherStation: true,
                }
            },
            messages: {
                MainWeatherStation: {
                    required: "aaa",
                    checkMainWeatherStation: "Age range is 18 to 30."
                }
            }
        });
    })
 
</script>

<h2>Edit</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "myform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>CropIrrigationWeather</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.CropIrrigationWeatherId)

        <div class="form-group">
            @Html.LabelFor(model => model.CropIrrigationWeatherName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.CropIrrigationWeatherName)
            </div>
        </div>
        <div class="form-group">

            @Html.LabelFor(model => model.MainWeatherStation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MainWeatherStationId, Model.MainWeatherStation, "-- Seleccione estación --")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AlternativeWeatherStation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AlternativeWeatherStationId, Model.AlternativeWeatherStation, "-- Seleccione estación --")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
